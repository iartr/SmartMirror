plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'com.google.gms.google-services'
}

android {
    compileSdk DefaultConfig.compileSdk

    defaultConfig {
        applicationId DefaultConfig.appId
        minSdk DefaultConfig.minSdk
        targetSdk DefaultConfig.targetSdk
        versionCode Releases.versionCode
        versionName Releases.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        debug {
            storeFile file("DebugKeystore.keystore")
            storePassword "debugkey"
            keyAlias "debug"
            keyPassword "debugkey"
        }
        release {
            def props = new Properties()
            props.load(new FileInputStream(rootProject.file("./local.properties")))

            def envAlias = System.getenv("APP_SIGN_ALIAS")
            def envPass = System.getenv("APP_SIGN_PASSWORD")

            if (envAlias == null) {
                envAlias = props['signing.alias']
            }
            if (envPass == null) {
                envPass = props['signing.pas']
            }

            storeFile = file("SmartMirrorKey.keystore")
            storePassword = envPass
            keyAlias = envAlias
            keyPassword = envPass
        }
    }

    buildTypes {
        debug {
            signingConfig signingConfigs.debug
            minifyEnabled false
        }
        release {
            signingConfig signingConfigs.release
            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility CompilerOptions.javaVersion
        targetCompatibility CompilerOptions.javaVersion
        coreLibraryDesugaringEnabled true
    }
    
    kotlinOptions {
        jvmTarget = CompilerOptions.javaVersion.toString()
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    coreLibraryDesugaring Libs.desugar

    implementation Libs.androidKtx
    implementation Libs.androidAppCompat
    implementation Libs.androidActivity
    implementation Libs.androidFragment
    implementation Libs.androidPreference
    implementation Libs.androidLegacySupport
    implementation Libs.androidMaterial

    implementation platform(Libs.firebase)
    implementation Libs.firebaseAnalytics
    implementation Libs.firebaseDatabase
    implementation Libs.firebaseAuth
    implementation Libs.firebaseConfig

    implementation Libs.lifecycleRuntime
    implementation Libs.lifecycleViewModel
    implementation Libs.lifecycleViewModelSaveState
    implementation Libs.lifecycleLiveData
    implementation Libs.lifecycleRx

    implementation Libs.playServices
    implementation Libs.googleAds

    implementation Libs.rxJava
    implementation Libs.rxKotlin
    implementation Libs.rxAndroid

    implementation platform(Libs.okHttp)
    implementation Libs.okHttpLogger
    implementation Libs.okHttpMockWebServer
    implementation Libs.retrofit
    implementation Libs.retrofitRxSupport
    implementation Libs.retrofitJsonReader
    implementation Libs.retrofitScalars
    implementation Libs.gson

    implementation Libs.glide
    annotationProcessor Libs.glideCompiler

    implementation Libs.camera2
    implementation Libs.cameraXLifecycle
    implementation Libs.cameraXView
    implementation Libs.googleMlFaceDetection

    implementation project(":features:settings")
    implementation project(":features:news")
    implementation project(":features:currency")
    implementation project(":features:weather")
    implementation project(":features:coordinates:api")
    implementation project(":features:coordinates:impl")

    implementation project(":core:utils")
    implementation project(":core:ext")
    implementation project(":core:design")
    implementation project(":core:toggles-api")
    implementation project(":core:account-api")
    implementation project(":core:mvvm")
    implementation project(":core:network")

    testImplementation LibsTest.junit4
    testImplementation LibsTest.okhttpMockWebServer
    androidTestImplementation LibsTest.androidJunit
    androidTestImplementation LibsTest.androidEspressoCore
}